#!/bin/bash   

# RC files
cd $(dirname $BASH_SOURCE)
BASE=$(pwd)

echo "===================================="
echo "**  Making backup of your files!  **"
for rc in *rc *profile tmux.conf agignore vim; do
  mv ~/.$rc ~/."$rc.backup"
done
echo "** Finished backing up your files **"
echo "===================================="


echo "===================================="
echo "========== moving files ============"
echo "===================================="
mkdir -p ~/.vim/autoload
mkdir -p ~/.vim/plugin
mkdir -p ~/.vim/tmp/backups
curl --insecure -fLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim
curl --insecure -fLo ~/.vim/plugin/Rename.vim  http://www.vim.org/scripts/download_script.php?src_id=16331 # vim plugin renamer :saveas


xcode-select --install

echo "==============================="
echo "** Started HOMEBREW process **"

[ -z "$(which brew)" ] &&
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

brew cleanup
brew update
# Upgrade any already-installed formulae.
brew upgrade --all
brew prune

# Install GNU core utilities (those that come with OS X are outdated).
# Donâ€™t forget to add `$(brew --prefix coreutils)/libexec/gnubin` to `$PATH`.
sudo ln -s /usr/local/bin/gsha256sum /usr/local/bin/sha256sum

echo "*********************** TAPS"
brew tap bramstein/webfonttools
brew tap caskroom/versions
brew tap caskroom/fonts 
brew tap homebrew/dupes
brew tap caskroom/cask

brew tap --repair

echo "*********************** A"
brew install ag
brew install aget 
brew install android-sdk
brew install ant 
echo "*********************** B"
brew install binutils
brew install brew-cask
echo "*********************** C"
brew install coreutils
brew install cmake
brew install cmus
brew install crystal-lang
brew install cscope
brew install ctags
brew install curl
echo "*********************** D"
brew install dark-mode
brew install diffutils
brew install docker
brew install boot2docker
echo "*********************** E"
brew install elasticsearch
echo "*********************** F"
brew install fish
brew install findutils
echo "*********************** G"
brew install git 
brew install git-lfs
brew install git-flow
brew install git-extras
brew install gnuplot
brew install gnu-sed --with-default-names
brew install gpg
brew install graphviz
brew install gzip
echo "*********************** H"
brew install htop
brew install hub
echo "*********************** I"
brew install imagemagick
echo "*********************** J"
brew install jq
echo "*********************** K"
echo "*********************** L"
brew install lua
echo "*********************** M"
brew install maven 
brew install memcached 
brew install moreutils
echo "*********************** N"
brew install nmap
brew install node
echo "*********************** O"
echo "*********************** P"
brew install phantomjs
brew install pigz
brew install pv
echo "*********************** Q"
echo "*********************** R"
brew install redis
brew install reattach-to-user-namespace
brew install rename
brew install rhino
echo "*********************** S"
brew install sbt
brew install scala
brew install sfnt2woff
brew install sfnt2woff-zopfli
brew install speedtest_cli
brew install ssh-copy-id
brew install sl
echo "*********************** T"
brew install tmux
brew install tree
echo "*********************** U"
brew install unrar
echo "*********************** V"
brew install vim
echo "*********************** W"
brew install watch
brew install webkit2png 
brew install wget
brew install woff2
echo "*********************** X"
echo "*********************** Y"
echo "*********************** Z"

echo "***********************"
echo "***********************"
echo "*********************** clean"
brew doctor
brew cleanup


echo "*********************** installing quicklook plugins"
brew cask install qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzipql qlimagesize webpquicklook

echo "***********************installing basic apps"
brew cask install appcleaner 
brew cask install android-studio 
brew cask install backblaze
brew cask install balsamiq-mockups
brew cask install bartender
brew cask install cloud
brew cask install dash
brew cask install dashlane 
brew cask install dropbox
brew cask install dockertoolbox 
brew cask install evernote
brew cask install flux 
brew cask install flycut 
brew cask install franz
brew cask install google-chrome
brew cask install google-drive 
brew cask install go2shell 
brew cask install iterm2-beta
brew cask install itsycal
brew cask install java
brew cask install limechat 
brew cask install mongodb 
brew cask install mongohub 
brew cask install octave
brew cask install polymail 
brew cask install postgres
brew cask install psequel 
brew cask install rdm
brew cask install sequel-pro 
brew cask install skype 
brew cask install spectacle
brew cask install sublime-text3
brew cask install vagrant
brew cask install vagrant-manager
brew cask install valentina-studio 
brew cask install virtualbox
brew cask install vlc 
brew cask install xmind 


echo "***********************installing HEROKU"
# HEROKU
brew install heroku-toolbelt
heroku update
heroku login

echo "***********************installing GIT PROMPT"  
if [ ! -e ~/.git-prompt.sh ]; then
  wget https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -O ~/.git-prompt.sh
fi

# Elasticsearch config
mv /usr/local/bin/plugin /usr/local/bin/elasticsearch-plugin
elasticsearch-plugin --install mobz/elasticsearch-head

# update sbtopts for scala
echo '-J-XX:+CMSClassUnloadingEnabled\n-J-Xmx2G\n' >> /usr/local/etc/sbtopts
#NODE
npm install -g coffee-script yo gulp grunt-cli jshint browserify generator-webapp less sass typescript
echo "** Finished HOMEBREW process **"
echo "==============================="

echo "******************** START WITH THE SYSTEM"
# ln -sfv /usr/local/opt/elasticsearch/*.plist ~/Library/LaunchAgents
# ln -sfv /usr/local/opt/memcached/*.plist ~/Library/LaunchAgents
# ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents

echo "******************** STARTs NOW"
# launchctl load ~/Library/LaunchAgents/homebrew.mxcl.elasticsearch.plist
# launchctl load ~/Library/LaunchAgents/homebrew.mxcl.memcached.plist
# launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist

echo "================================"
echo "** Started Oh-MY-ZSH process **"
#set default terminal to zsh
brew install zsh zsh-completions
curl -L http://install.ohmyz.sh | sh

# echo "fpath=(/usr/local/share/zsh-completions $fpath)" >> ~/.zshrc

chsh -s $(which zsh)
chmod go-w '/usr/local/share'
rm -f ~/.zcompdump; compinit
mv -f ~/dot-files/.vimrc ~/.vimrc 
mv -f ~/dot-files/.bash_profile ~/.bash_profile 
mv -f ~/dot-files/.bashrc ~/.bashrc 
mv -f ~/dot-files/.gemrc ~/.gemrc 
mv -f ~/dot-files/.zshrc ~/.zshrc 

echo "******************** EXPORTS"
echo 'export PATH="$PATH:/usr/local/bin"' >> ~/.bashrc
echo 'export PATH="$PATH:/usr/local/bin"' >> ~/.zshrc

echo 'export ANDROID_HOME=/usr/local/opt/android-sdk' >> ~/.bashrc
echo 'export ANDROID_HOME=/usr/local/opt/android-sdk' >> ~/.zshrc

echo 'PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"' >> ~/.zshrc
echo 'PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"' >> ~/.bashrc

echo 'PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"' >> ~/.zshrc
echo 'PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"' >> ~/.bashrc

echo 'export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"'  >> ~/.bashrc
echo 'export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"'  >> ~/.zshrc

echo 'export MANPATH="/usr/local/opt/findutils/libexec/gnuman:$MANPATH"'  >> ~/.bashrc
echo 'export MANPATH="/usr/local/opt/findutils/libexec/gnuman:$MANPATH"'  >> ~/.zshrc

echo 'export ZSH="$HOME:.oh-my-zsh"' >> ~/.zshrc
echo 'DEFAULT_USER="$(whoami)"' >> ~/.zshrc
echo 'DEFAULT_USER="$(whoami)"' >> ~/.bashrc

echo "unalias run-help" >> ~/.zshrc
echo "autoload run-help" >> ~/.zshrc
echo "HELPDIR=/usr/local/share/zsh/help" >> ~/.zshrc


echo "** Finished Oh-MY-ZSH process **"
echo "================================"

# RBENV
read -r -p "Do you wanna install RBENV? [y/N] " resp_rbenv
if [[ $resp_rbenv =~ ^([yY]|[sS])$ ]]
then
  brew install rbenv
  brew install ruby-build 
  gem update --system
  echo 'export PATH="$HOME:.rbenv/shims:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH"'  >> ~/.zshrc
fi
  
# RAILS
read -r -p "Do you wanna install Ruby, Rails and Sinatra? [y/N] " resp_ror
if [[ $resp_ror =~ ^([yY]|[sS])$ ]]
then
  rbenv install $(rbenv install -l | grep -v - | tail -1)
  rbenv global $(rbenv install -l | grep -v - | tail -1)  
  gem install bundle bundler sinatra jekyll rails 
  rbenv rehash
fi

#MYSQL
read -r -p "Do you wanna install MySQL? [y/N]" resp_mysql
if [[ $resp_mysql =~ ^([yY]|[sS])$ ]]
then
  brew install mysql
  # Fix MySQL installatyion for OS X El Capitan
  ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/local/lib/libmysqlclient.18.dylib   
  
  read -r -p "Make MySQL start with system? [y/N] " resp_mysql_s
  if [[ $resp_mysql_s =~ ^([yY]|[sS])$ ]]
  then
    ln -sfv /usr/local/opt/mysql/*plist ~/Library/LaunchAgents
  fi
  
  read -r -p "Make MySQL start right NOW? [y/N] " resp_mysql_n
  if [[ $resp_mysql_n =~ ^([yY]|[sS])$ ]]
  then
    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
  fi
fi

#POSTGRESQL
read -r -p "Do you wanna install PostgreSQL? [y/N] " resp_postg
if [[ $resp_psotg =~ ^([yY]|[sS])$ ]]
then
  brew install postgresql  
  read -r -p "Make PostgreSQL start with system? [y/N] " resp_postg_s
  if [[ $resp_postg_s =~ ^([yY]|[sS])$ ]]
  then
    ln -sfv /usr/local/opt/postgresql/*plist ~/Library/LaunchAgents
  fi
  
  read -r -p "Make PostgreSQL start right NOW? [y/N] " resp_postg_n
  if [[ $resp_postg_n =~ ^([yY]|[sS])$ ]]
  then
    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
  fi
fi

#METEOR
read -r -p "Wanna install the latest Meteor version?" resp_meteor
if [[ $resp_meteor =~ ^([yY]|[sS])$ ]]
then
  curl https://install.meteor.com/ | sh
fi

#ELIXIR
read -r -p "Wanna install Elixir?" resp_elixir
if [[ $resp_elixr =~ ^([yY]|[sS])$ ]]
then
  brew install elixir
fi

#PYTHON
read -r -p "Wanna install Python?" resp_python
if [[ $resp_python =~ ^([yY]|[sS])$ ]]
then
  brew install python
  pip install --upgrade setuptools
  pip install --upgrade pip
  pip install virtualenv
  brew tap samueljohn/python
  brew install gcc
  pip install nose pyparsing python-dateutil pep8
  brew install samueljohn/python/numpy
  brew install scipy 
  brew install matplotlib 
  brew install zeromq 
  brew install pyqt
  pip install pyzmq pygments jinja2 tornado ipython
fi

#FZF
read -r -p "Wanna install FZF (imagine spotlight search on command line)?" resp_fzf
if [[ $resp_fzf =~ ^([yY]|[sS])$ ]]
then
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install
fi

#GIT
read -r -p "Wanna setup GIT?" resp_git
if [[ $resp_git =~ ^([yY]|[sS])$ ]]
then
  git config --global color.ui true
  read -r -p "Name to be used on GIT:" resp_git_n
  if [[ $resp_git_n =~ ^([a-z]{2,})$ ]]
  then
    git config --global user.name "$resp_git_n"
  fi
  
  read -r -p "E-mail to be used on GIT:" resp_git_e
  if [[ $resp_git_e =~ ^([a-z]{2,})$ ]]
  then
  echo "Email: $resp_git_e"
    git config --global user.email "$resp_git_e"
  fi
  
  read -r -p "Generate SSH key?:" resp_git_ssh
  if [[ $resp_git_ssh =~ ^([yY]|[sS])$ ]]
  then
    ssh-keygen -t rsa -C "$resp_git_e"
    echo "=================================="
    echo "Copy this to your github account:"
    cat ~/.ssh/id_rsa.pub
  fi
  git config --global credential.helper osxkeychain
  export GIT_SSL_NO_VERIFY=true
  echo 'export GIT_SSL_NO_VERIFY=true' >> ~/.zshrc
  echo 'export GIT_SSL_NO_VERIFY=true' >> ~/.bashrc
fi

vim +:PlugInstall +qall

echo 'reloading terminal and removing leftovers'
source ~/.vimrc
source ~/.bash_profile
source ~/.zshrc
tmux source-file ~/.tmux.conf
rm -f ~/configure
rm -rf ~/dot-files
rm -rf ~/.git


echo "+++++++++++++++++++++++++++++++++++++++++++++"
echo "+++++++++++++++++++++++++++++++++++++++++++++"
echo " "
echo "PLEASE CLOSE YOUR TERMINAL AND OPEN ITERM :) "
echo " "
echo "+++++++++++++++++++++++++++++++++++++++++++++"
echo "+++++++++++++++++++++++++++++++++++++++++++++"
