#!/bin/bash   

# RC files
cd $(dirname $BASH_SOURCE)
BASE=$(pwd)

echo "==============================="
echo "= Making backup of your files!"
for rc in *rc *profile tmux.conf agignore vim; do
  mv ~/.$rc ~/."$rc.backup"
done
echo "= Finished backuping your files"
echo "==============================="

# git-prompt
if [ ! -e ~/.git-prompt.sh ]; then
  wget https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -O ~/.git-prompt.sh
fi

# Setup for MACOS
if [ "$(uname -s)" == "Darwin" ]; then
  xcode-select --install
  
  echo "=========================================="
  echo "Started HOMEBREW process "
  # Homebrew
  [ -z "$(which brew)" ] &&
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  
  brew update
  brew install \
    ag ant cmus coreutils cscope ctags \
    cmake fish git gnuplot graphviz imagemagick \
    maven memcached redis curl \
    sl tmux reattach-to-user-namespace tree unrar vim wget zsh jq macvim
  brew update
  nrew upgrade
  echo "Finished HOMEBREW process"
  echo "=========================================="
  

  read -r -p "Do you wanna install RBENV? [y/N] " resp_rbenv
  if [[ $resp_rbenv =~ ^([yY]|[sS])$ ]]
  then
    brew install rbenv ruby-build
  fi
    
  read -r -p "Do you wanna install Ruby, Rails and Sinatra? [y/N] " resp_ror
  if [[ $resp_ror =~ ^([yY]|[sS])$ ]]
  then
    rbenv install 2.2.3
    rbenv global 2.2.3
    gem install bundle
    gem install sinatra
    gem install rails -v 4.2.4
    rbenv rehash
  fi

  read -r -p "Do you wanna install MySQL? [y/N]" resp_mysql
  if [[ $resp_mysql =~ ^([yY]|[sS])$ ]]
  then
    brew install mysql
    # Fix MySQL installatyion for OS X El Capitan
    ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/local/lib/libmysqlclient.18.dylib   
    
    read -r -p "Make MySQL start with system? [y/N] " resp_mysql_s
    if [[ $resp_mysql_s =~ ^([yY]|[sS])$ ]]
    then
      ln -sfv /usr/local/opt/mysql/*plist ~/Library/LaunchAgents
    fi
    
    read -r -p "Make MySQL start right NOW? [y/N] " resp_mysql_n
    if [[ $resp_mysql_n =~ ^([yY]|[sS])$ ]]
    then
      launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
    fi
  fi
  read -r -p "Do you wanna install PostgreSQL? [y/N] " resp_postg
  if [[ $resp_psotg =~ ^([yY]|[sS])$ ]]
  then
    brew install postgresql
    
    read -r -p "Make PostgreSQL start with system? [y/N] " resp_postg_s
    if [[ $resp_postg_s =~ ^([yY]|[sS])$ ]]
    then
      ln -sfv /usr/local/opt/postgresql/*plist ~/Library/LaunchAgents
    fi
    
    read -r -p "Make MySQL start right NOW? [y/N] " resp_postg_n
    if [[ $resp_postg_n =~ ^([yY]|[sS])$ ]]
    then
      launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
    fi
  fi
  read -r -p "Wanna install the latest Meteor version?" resp_meteor
  if [[ $resp_meteor =~ ^([yY]|[sS])$ ]]
  then
    curl https://install.meteor.com/ | sh
  fi
  read -r -p "Wanna install Elixir?" resp_elixir
  if [[ $resp_elixr =~ ^([yY]|[sS])$ ]]
  then
    brew install elixir
  fi
 
  read -r -p "Wanna install FZF (imagine spotlight search on command line)?" resp_fzf
  if [[ $resp_fzf =~ ^([yY]|[sS])$ ]]
  then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
  fi
# Setup for LINUX
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
  echo "setup rbenv"
  git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
  git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
  
# Setup for WINDOWS
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
   echo 'not configured yet :('
fi
  read -r -p "Wanna setup GIT?" resp_git
  if [[ $resp_git =~ ^([yY]|[sS])$ ]]
  then
    git config --global color.ui true
    read -r -p "Name to be used on GIT:" resp_git_n
    if [[ $resp_git_n =~ ^([a-z]{2,})$ ]]
    then
      git config --global user.name "$resp_git_n"
    fi
    
    read -r -p "E-mail to be used on GIT:" resp_git_e
    if [[ $resp_git_e =~ ^([a-z]{2,})$ ]]
    then
    echo "Email: $resp_git_e"
      git config --global user.email "$resp_git_e"
    fi
    
    read -r -p "Generate SSH key?:" resp_git_ssh
    if [[ $resp_git_ssh =~ ^((i)(y|e|s|yes))$ ]]
    then
      ssh-keygen -t rsa -C "$resp_git_e"
    fi
  fi

  tmux source-file ~/.tmux.conf

cd $(dirname $BASH_SOURCE)
BASE=$(pwd)

export GIT_SSL_NO_VERIFY=true
mkdir -p ~/.vim/autoload
mkdir -p ~/.vim/plugin
mkdir -p ~/.vim/tmp/backups
curl --insecure -fLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim
curl --insecure -fLo ~/.vim/plugin/Rename.vim  http://www.vim.org/scripts/download_script.php?src_id=16331 # vim plugin renamer :saveas

vim +PlugInstall +qall

mv -f ~/dot-files/.vimrc ~/.vimrc 
mv -f ~/dot-files/.bash_profile ~/.bash_profile 
mv -f ~/dot-files/.bashrc ~/.bashrc 
mv -f ~/dot-files/.gemrc ~/.gemrc 
mv -f ~/dot-files/.zshrc ~/.zshrc 
source ~/.vimrc
source ~/.bashrc
source ~/.bash_profile
source ~/.zshrc
rm -f ~/configure
rm -rf ~/dot-files
